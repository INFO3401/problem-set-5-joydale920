from utils import *
from covid import *

# 2 

# International organization : China
# I don't think the China data will be super reliable. 
# I think it is unreliable just based on what I have heard from the news
# About the countries lack of reporting on coronavirus cases
# Also China has many different provinces...it is hard to know if all
# Of these provinces have the same standards for testing and reporting the virus

# Government organization : World Health Organization
# The WHO send out daily reports concerning the coronavirus
# The data I am looking at is on Feb 9th.  It contains the number of cases globally
# The number of cases in China and outside of China
# I think this would be a reliable source of data because the WHO
# Is a trusted government source used by high ranking officials

# News organization : I don't see any news outlets in the data?

# 3
df = loadAndCleanData ("COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
df = correctDateFormat(df) 

print(df)

#reference columns name
x = "Date"
y = "Confirmed"

# Run linear regression on COVID data
# Will look at each row of data and pritn equation generated by model
# ---

linearModel = runTemporalLinearRegression(df, x, y)
print("y = " +str(linearModel[0]) + "x + " +str(linearModel[1]))

# aggrtegate all cases to get one count per date
# sum total cases over the global sum
groupedDf = df.groupby(x, as_index=False).sum()
linearModel = runTemporalLinearRegression(groupedDf, x, y)
print("y_world = " +str(linearModel[0]) + "x + " +str(linearModel[1]))

# next

groupedDf["Confirmed"] = np.log(groupedDf["Confirmed"])
linearModel = runTemporalLinearRegression(groupedDf, x, y)
print("y_world = " +str(linearModel[0]) + "x + " +str(linearModel[1]))

italyData = aggregateCountry(df, "Italy")
italyData = italyData[italyData["Confirmed"] >3 ]
italyData["Confirmed"] = np.log(italyData["Confirmed"])
linearModel = runTemporalLinearRegression(italyData, x, y)
print("y_italy = " +str(linearModel[0]) + "x + " +str(linearModel[1]))
italyGrowth = math.exp(linearModel[0])
print("Italy's Growth Rate is " + str(italyGrowth))


usData = aggregateCountry(df, "US")
usData = usData[usData["Confirmed"] >3 ]
usData["Confirmed"] = np.log(usData["Confirmed"])
linearModel = runTemporalLinearRegression(usData, x, y)
print("y_us = " +str(linearModel[0]) + "x + " +str(linearModel[1]))
usGrowth = math.exp(linearModel[0])
print("US's Growth Rate is " + str(usGrowth))

chinaData = aggregateCountry(df, "China")
#linearModel = runTemporalLinearRegression(chinaData, x, y)
logisticModel = runTemporalLinearRegression(chinaData, x, y)
print("y_china =  1 / (1+e^-(" + str(logisticModel[1]) + "x + " + str(logisticModel[2]) + "))") 


#9 
print(mergeData(df, df1, "Deaths"))
x = mergeData(x, df2, "Recovered")
print(mergeData(x, df2, "Recovered"))

#11
plotTimeline(x, "Date", "Confirmed")
plotTimeline(x, "Date", "Deaths")
plotTimeline(x, "Date", "Recovered")


#16
topCorrelation(x, "Confirmed")


#17
plotMultipleTimeLines(x, "Date", "Recovered", "Deaths")
plotMultipleTimeLines(x, "Date", "Confirmed", "Deaths")
plotMultipleTimeLines(x, "Date", "Confirmed", "Deaths")







